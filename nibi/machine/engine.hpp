#pragma once

#include "machine/instructions.hpp"

namespace machine {

/*
  TODO: Update parser to take the instruction_receiver_if
        and pass it an engine. 

        The parser should generate meta data that can tie
        generated bytecode to source locations for every
        generated instruction that it hands to the engine 

*/

class engine_c : public instruction_receiver_if {
public:
  void handle_instructions(
    const bytes_t& instructions,
    error_handler_ptr error_handler) override;

private:

  struct function_s {
    bytes_t data;
    error_handler_ptr error_handler{nullptr};
  };

  [[nodiscard]] execution_error_s
    generate_error(const std::string& msg) const;
};



} // namespace
