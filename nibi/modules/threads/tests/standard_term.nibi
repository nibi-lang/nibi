(use "io" "threads")

(threads::fn busy [] [
  (threads::sleep (threads::time::seconds 5))
  (<- 40)
])

(io::println "Starting...")

(:= tcell (threads::future (busy)))

(io::println "tcell: " tcell ", is_ready: " (threads::future::ready tcell))

(:= count 0)
(while (not (threads::future::ready tcell)) [
  (set count (+ 1 count))
  (io::println "waiting.. " count)
  (threads::future::wait tcell (threads::time::milli 500))
])

(io::println "Complete in " (threads::future::runtime tcell) "ms")

(:= result (threads::future::get tcell))

(assert (eq 40 result))

(io::println "END")
