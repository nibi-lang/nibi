(use "io" "net")

(:= port (net::htons 8080))

(:= socket_fd (net::socket net::AF_INET net::SOCK_STREAM 0))

(if (eq -1 socket_fd) [
  (io::println "Failed to acquire socket fd. errno= " (net::errno) )
  (exit 1)])

(assert (neq -1 (net::setsockopt socket_fd net::SOL_SOCKET net::SO_REUSEADDR 1)) "Failed to set socket options")
(assert (neq -1 (net::setsockopt socket_fd net::SOL_SOCKET net::SO_REUSEPORT 1)) "Failed to set socket options")

(:= sockaddr_in (net::sockaddr_in net::AF_INET port net::INADDR_ANY))
(assert (eq true (mem-is-set sockaddr_in)) "Unable to allocate sockaddr_in")

(:= bind_result (net::bind socket_fd sockaddr_in))

(if (eq -1 bind_result) [
  (io::println "Failed to bind socket. errno=" (net::errno))
  (mem-del sockaddr_in)
  (exit 1)
])

(if (eq -1 (net::listen socket_fd 10)) [
  (io::println "Failed to listen on socket. errno=" (net::errno))
  (mem-del sockaddr_in)
  (exit 1)
])

(:= new_conn_fd (net::accept socket_fd sockaddr_in))

(if (< new_conn_fd 0) [
  (io::println "Failed to acquire a connection. errno=" (net::errno))
  (mem-del sockaddr_in)
  (exit 1)
])

(:= read_buffer (str-lit (<|> " " 32)))

(:= n_bytes_read (net::read new_conn_fd read_buffer))

(str-set-at read_buffer n_bytes_read (char "\0"))

(io::println "Read in: " n_bytes_read " bytes. Data: " read_buffer)

(:= sent_len (net::send new_conn_fd read_buffer 0))
(if (< sent_len 0) [
  (io::println "Failed to send data. errno=" (net::errno))
  (mem-del sockaddr_in)
  (exit 1)
])

(io::println "Wrote out: " sent_len " bytes.")

(mem-del sockaddr_in)
(net::close new_conn_fd)
(net::close socket_fd)
(net::shutdown socket_fd net::SHUT_RDWR)
