(use "io")
(fn mandelbrot [real image] [
  (:= limit 100)
  (:= z_image (clone image))
  (:= z_real (clone real))
  (:= r2 0)
  (:= i2 0)
  (loop (:= k 0) (< k limit) (set k (+ k 1)) [
    (set r2 (* z_real z_real))
    (set i2 (* z_image z_image))
    (if (> (+ r2 i2) 4.0) (<- k))
    (set z_image (+ (* z_real (* z_image 2.0)) image))
    (set z_real (+ real (- r2 i2)))
  ])
  (<-)
])

(:= width 80.0)
(:= height 30.0)
(:= x_start -3.0)
(:= x_end 2.0)
(:= y_start -2.0)
(:= y_end 2.0)
(:= dx (/ (- x_end x_start) (- width 1)))
(:= dy (/ (- y_end y_start) (- height 1)))
(:= pixels ["." "." "," "-" "^" "_" "*" "&" "^" "%" "1" "2" "3" "4" "5"])
(:= num_pixels (len pixels))
(:= x 0)
(:= y 0)
(:= value 0)

(loop (:= i 0.0) (< i height) (set i (+ i 1)) [
  (loop (:= j 0.0) (< j width) (set j (+ j 1)) [
    (set x (+ x_start (* j dx)))
    (set y (- y_end (* i dy)))
    (set value (mandelbrot x y))
    (if (eq 0 value) 
       (io::print " ")
       (io::print (at pixels (% value num_pixels))))
  ])
  (io::println)
])
