
(:= x "..........")
(str-set-at x 0 "X")

(assert (eq x "X........."))

(str-set-at x (- (len x) 1) "X")

(assert (eq x "X........X"))

(assert (eq (str-set-at "abc" 1 "X") "aXc"))
(assert (eq (str-set-at "abc" 0 "X") "Xbc"))
(assert (eq (str-set-at "abc" 2 "X") "abX"))

# OOB
(try [
  (str-set-at "abc" 3 "X")
  (exit 1)
] (nop))

# Negative values can just wrap around until
# they are positive and then they are treated
# as positive values.
(assert (eq (str-set-at "abc" -1 "X") "abX"))
(assert (eq (str-set-at "abc" -2 "X") "aXc"))
(assert (eq (str-set-at "abc" -3 "X") "Xbc"))
(assert (eq (str-set-at "abc" -4 "X") "abX"))
(assert (eq (str-set-at "abc" -5 "X") "aXc"))
