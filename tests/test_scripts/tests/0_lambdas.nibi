
(fn set_to_ten [x] (set x 10))
(fn set_to_two [x] [
  (set x 1)
  (set x (+ x 1))
])

(:= target_0 0)

(assert (eq 10 (set_to_ten target_0)) "Could not update target")
(assert (eq 2 (set_to_two target_0)) "Could not update target")

(fn shadow [x] [

  # Directly set the thing like above
  (set x 100)

  # By using "assign" we shadow the var and won't be able to update it anymore 
  # as we overwrote the env with it entirely 
  (:= x 1024)

  (set x 200)
])

(:= var 0)
(shadow var)

(assert (eq 100 var) "Var was not as expected")

(:= c 0)
(fn test [v] [
  (loop (:= i 0) (< i 10) (set i (+ i 1))
    (loop (:= j 0) (< j 10) (set j (+ j 1))
      (loop (:= k 0) (< k 10) (set k (+ k 1))[
        (set v (+ v i j k))
        (set c (+ c i j k))
      ])
    )
  )
])

(:= res 0)
(test res)
(assert (eq res c) "no dice")
