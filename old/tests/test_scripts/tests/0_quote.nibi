
(:= f (quote (fn set_to_ten [x] (set x 10))))

(assert (eq "(fn set_to_ten [x] (set x 10))" f) "Not quoted")

# This will define the thing
(eval f)

(:= t 0)
(assert (eq 10 (set_to_ten t)) "Evaluated function did not execute correctly")

(:= b (quote (fn set_to_one [x] [
	(set x 1)
	(+ x 1)
])))

(:= y 0)
(assert (eq 2 ((eval b) y)) "Evaluated function did not execute correctly")

(assert (eq "[1 2 3 y t]" (quote [1 2 3 y t])) "Regular data list quote failure")

(eval "(:= my_var 42)")

(assert (eq 42 my_var) "Set data failure")

