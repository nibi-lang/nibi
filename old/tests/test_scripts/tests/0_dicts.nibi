(:= x (dict [
  ["a" 1]
  ["b" 2]
  ["c" 3]
  ["d" [100 101 102]]
  ["e" "delta"]
]))

(assert (eq (x :get "a") 1))
(assert (eq (x :get "b") 2))
(assert (eq (x :get "c") 3))
(assert (eq (x :get "d") [100 101 102]))
(assert (eq (x :get "e") "delta"))

(x :let "fn" (fn [] (<- 88)))

(assert (eq 88 ((x :get "fn"))))
(assert (eq 6 (len (x :keys))))
(assert (eq 6 (len (x :vals))))

(set (x :get "a") 1024)

(assert (eq (x :get "a") 1024))

(x :del "fn")

(assert (eq 5 (len (x :keys))))
(assert (eq 5 (len (x :vals))))

(try [
  (x :get "fn")
  (assert (eq 1 0) "Function was not removed from dict")
  (exit 1)
] (nop))

(drop x)

(:= x (dict))

(assert (eq 0 (len (x :keys))))
(assert (eq 0 (len (x :vals))))

(drop x)

(:= x (dict []))

(assert (eq 0 (len (x :keys))))
(assert (eq 0 (len (x :vals))))

(drop x)

(:= value [
  ["a" 1]
  ["b" 2]
  ["c" 3]
  ["d" [100 101 102]]
  ["e" "delta"]
])

(:= x (dict value))

(assert (eq (x :get "a") 1))
(assert (eq (x :get "b") 2))
(assert (eq (x :get "c") 3))
(assert (eq (x :get "d") [100 101 102]))
(assert (eq (x :get "e") "delta"))


(assert (eq "dict" (type x)))
